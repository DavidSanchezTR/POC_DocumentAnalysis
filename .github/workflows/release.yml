name: Release

on:
  push:
    branches:
      - main

        # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  configuration: 'Release'
  solution_path: 'Aranzadi.DocumentAnalysis/Aranzadi.DocumentAnalysis.csproj'
  nuget_feed_name: 'SWF_Burgos_Spain_Artifacts_feed'
  nuget_feed_source: 'https://pkgs.dev.azure.com/TR-Legal-OnlineServices/_packaging/SWF_Burgos_Spain_Artifacts_feed/nuget/v3/index.json'
  password_ado: ${{ secrets.PASSWORD_ADO }}
  nuget_config: './Nuget.Config'

jobs:
  # test:
  #   name: Dotnet-Unit-Tests
  #   uses: DavidSanchezTR/POC_DocumentAnalysis/.github/workflows/dotnet-unit-tests.yml@main    
    
  build:

    strategy:
      matrix:
        dotnet_version: [6.x]
        nuget_version: [5.x]

    runs-on: windows-latest
    #needs: [test]
    steps:
    - name: "☁️ Checkout Repository"
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.dotnet_version }}

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1
      with:
        nuget-version: ${{ matrix.nuget_version }}

    - name: Auth Nuget TR
      run: dotnet nuget add source ${{ env.nuget_feed_source }} --name ${{ env.nuget_feed_name }} --username 'david.sanchezfuentes@thomsonreuters.com' --password ${{ env.password_ado }} --store-password-in-clear-text --configfile ${{ env.nuget_config }}

    - name: Restore Nuget Packages
      run: dotnet restore ${{ env.solution_path }} --verbosity normal 

    - name: Compile Solution
      run: dotnet.exe publish ${{ env.solution_path }} -c Dev -f net6.0

    - name: Run comand
      run: dir ${{ github.workspace }} -recurse

    - name: "📂 Create Artifacts Build"
      uses: actions/upload-artifact@v3
      with:
        name: build
        path: Aranzadi.DocumentAnalysis/bin/Dev/net6.0/publish

  release:

    # environment:
    #   name: Production
    #   url: https://github.com/${{ github.repository }}/releases/tag/${{ steps.tag_version.outputs.new_tag }}
    name: Semantic Release
    needs:
      - build
    runs-on: windows-latest
    permissions: write-all

    steps:
    - name: "☁️ Checkout Repository"
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Run comand
      run: dir ${{ github.workspace }} -recurse

    - name: "📂 Download Build Artifacts"
      uses: actions/download-artifact@v3
      with:
        name: build
        path: ${{ github.workspace }}/build

    - name: Bump Version and Push Tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.1
      with:
       github_token: ${{ secrets.GITHUB_TOKEN }} 
       
    - name: "🚀 Create Release"
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        draft: false
        prerelease: false
        release_name: Release ${{ steps.tag_version.outputs.new_tag }}
        tag_name: ${{ steps.tag_version.outputs.new_tag }}
        body: ${{ steps.tag_version.outputs.changelog }}

    - run: dir ${{github.workspace}}/build
    - run: mkdir ${{github.workspace}}/build/Version
    - run: echo "${{ steps.tag_version.outputs.new_tag }}" > ${{github.workspace}}/build/Version/Version.txt

    - name: Run comando
      run: dir ${{ github.workspace }} -recurse

    - uses: montudor/action-zip@v1
      with:
        args: zip -qq -r build.zip ${{github.workspace}}/build

    - name: upload windows artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{github.workspace}}/build/build.zip
        asset_name: DAS.zip
        asset_content_type: application/zip

    - name: Eliminar artefacto build
      uses: geekyeggo/delete-artifact@v1
      with:
        name: build   

    - name: "📂 production artifacts with version"
      uses: actions/upload-artifact@v2
      with:
        name: build_v
        path: ${{github.workspace}}/build

    - name: Run comando
      run: dir ${{ github.workspace }} -recurse

  # deployDEV:
  #   name: Deploy DEV
  #   needs: 
  #       - release
  #   runs-on: windows-latest
  #   environment:
  #     name: DEV
  #     url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

  #   steps:  
  #   #  Get WebApp/FunctionApp publish profile
  #   - name: Download Release Artifacts
  #     uses: actions/download-artifact@v2
  #     with:
  #       name: das-app
  #       path: ${{github.workspace}}

  #   - name: Deploy to Azure Web App
  #     id: deploy-to-webapp
  #     uses: azure/webapps-deploy@v2      
  #     with:
  #       app-name: ${{ env.AZURE_WEBAPP_NAME }}
  #       publish-profile: ${{ env.AZURE_WEBAPP_PUBLISH_PROFILE }}
  #       package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  # deployQA:
  #   name: Deploy QA
  #   needs: 
  #       - release
  #   runs-on: windows-latest
  #   environment:
  #     name: QA
  #     url: https://uksouth-iflx-shar-documentanalysis-qa-app.azurewebsites.net

  #   steps:  
  #   #  Get WebApp/FunctionApp publish profile
  #   - name: Download Release Artifacts
  #     uses: actions/download-artifact@v2
  #     with:
  #       name: das-app
  #       path: ${{github.workspace}}

  #   - name: Deploy to Azure Web App
  #     id: deploy-to-webapp
  #     uses: azure/webapps-deploy@v2
  #     with:
  #       app-name: ${{ env.AZURE_WEBAPP_NAME }}
  #       publish-profile: ${{ env.AZURE_WEBAPP_PUBLISH_PROFILE }}
  #       package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}